name: DEPLOYMENT 

on:
  pull_request_review:
    types: [submitted]
    branches: [main]


jobs:
  build:
    runs-on: [self-hosted, windows, x64]
    container:
      image: node:mcr.microsoft.com/powershell:latest

    steps:
      - uses: actions/checkout@v2

      - name: payload
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: |
          echo "$GITHUB_CONTEXT"

      - name: create delta-package
        env:
          BASE_REF: ${{ github.event.pull_request.base.ref }}
          HEAD_REF: ${{ github.event.pull_request.head.ref }}
        run: |
          $pathsString = git diff origin/${{ env.BASE_REF }}~0 origin/${{ env.HEAD_REF }}~0 --name-only force-app
          Write-Host $pathsString
          $pathArray = $pathsString.Split()

          mkdir delta-package

          $pathArray | ForEach{
              
              $splitedPath = $_.Split("/")
              $destination = "delta-package"+"/main/default/"+$splitedPath[3]+"/"+$splitedPath[4]
              if (!(Test-Path -path $destination)) {New-Item $destination -Type Directory}

              $toCopy = "force-app"+"/main/default/"+$splitedPath[3]+"/"+$splitedPath[4]
              WRITE-HOST $toCopy
              Copy-Item $toCopy/* -Destination $destination

          }
      - name: authorization
        run: |
          New-Item -Name "server.key" -ItemType File -Value "${{ secrets.JWTKEYFILE }}"
          sfdx force:auth:jwt:grant --setalias MyOrg --jwtkeyfile server.key --clientid ${{ secrets.CONSUMERKEY }} -u ${{ secrets.USR }}

      - name: deployment
        run: |
          sfdx force:source:deploy --sourcepath delta-package -u MyOrg
